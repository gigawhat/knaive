on: push

env:
  PYTHONVER: "3.12.1"
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHONVER }}
      - name: Install poetry
        run: |
          pip install poetry
      - name: Install dependencies
        run: |
          poetry install
      - name: Run tests
        run: |
          poetry run pytest
  build:
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get current date and time
        run: echo "TIMESTAMP=$(date +'%Y%m%d%H%M%S')" >> "$GITHUB_ENV"

      - name: Get the short SHA
        run: echo "SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-7)" >> "$GITHUB_ENV"

      - name: Print the environment variables
        run: echo "TIMESTAMP=${{ env.TIMESTAMP }} SHORT_SHA=${{ env.SHORT_SHA }}"

      - name: Set the image name if on the default branch
        if: github.ref == 'refs/heads/main'
        run: echo "IMAGE_NAME=ghcr.io/${{ github.repository }}:1.0.${{ env.TIMESTAMP }}-sha.${{ env.SHORT_SHA }}" >> "$GITHUB_ENV"

      - name: Set the image name if on a feature branch
        if: github.ref != 'refs/heads/main'
        run: echo "IMAGE_NAME=ghcr.io/${{ github.repository }}:0.0.${{ env.TIMESTAMP }}-${{ github.ref_slug }}-sha.${{ env.SHORT_SHA }}" >> "$GITHUB_ENV"

      - name: Print the image name
        run: echo "IMAGE_NAME=${{ env.IMAGE_NAME }}"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:latest
            ${{ env.IMAGE_NAME }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
